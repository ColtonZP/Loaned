{"version":3,"sources":["function.js","Person.js","App.js","store.js","index.js"],"names":["incKeywords","decKeywords","filterKeywords","Person","inject","observer","props","className","person","name","amount","history","map","record","change","App","useState","input","changeInput","OwedStore","records","handleSubmit","e","preventDefault","inspectedText","filter","inputText","filteredReturn","forEach","word","undefined","replace","substring","length","returnName","str","index","filteredInput","indexOf","newString","Number","status","reason","inspectText","alert","addRecord","console","log","onSubmit","type","id","value","onChange","target","key","updateAmount","oldAmount","find","changePerson","updatePerson","push","newPerson","decorate","observable","action","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3162fac.chunk.js","sourcesContent":["const incKeywords = ['owes', 'took', 'borrowed', 'incurred', 'needs'];\nconst decKeywords = ['paid', 'gave', 'provided'];\nconst filterKeywords = ['me', 'another'];\n\nexport const inspectText = input => {\n  let name, change, amount;\n\n  function filter(inputText) {\n    let filteredReturn;\n    filterKeywords.forEach(word => {\n      if (filteredReturn !== undefined) {\n        filteredReturn = filteredReturn.replace(` ${word} `, ' ');\n      } else filteredReturn = inputText.replace(` ${word} `, ' ');\n    });\n    // Shave extra spaces in front or back\n    if (filteredReturn[0] === ' ') {\n      filteredReturn = filteredReturn.substring(1, filteredReturn.length);\n    }\n    if (filteredReturn[filteredReturn.length - 1] === ' ') {\n      filteredReturn = filteredReturn.substring(0, filteredReturn.length - 1);\n    }\n    return filteredReturn;\n  }\n\n  // return name from index\n  function returnName(str, index) {\n    return str.substring(0, index - 1);\n  }\n\n  // does it contain any incKeywords?\n  incKeywords.forEach(word => {\n    const filteredInput = filter(input);\n    const index = filteredInput.indexOf(word);\n    const newString = filteredInput.substring(index, filteredInput.length);\n    if (index !== -1) {\n      change = 'increment';\n      name = returnName(filteredInput, index);\n      amount = newString.substring(\n        newString.indexOf(' ') + 1,\n        filteredInput.length\n      );\n      if (amount[0] === '$') {\n        amount = Number(amount.substring(1, amount.length));\n      } else amount = Number(amount);\n    }\n  });\n\n  // does it contain any decKeywords?\n  decKeywords.forEach(word => {\n    const filteredInput = filter(input);\n    const index = filteredInput.indexOf(word);\n    const newString = filteredInput.substring(index, filteredInput.length);\n    if (index !== -1) {\n      change = 'decrement';\n      name = returnName(filteredInput, index);\n      amount = newString.substring(\n        newString.indexOf(' ') + 1,\n        filteredInput.length\n      );\n      if (amount[0] === '$') {\n        amount = Number(amount.substring(1, amount.length));\n      } else amount = Number(amount);\n    }\n  });\n\n  if (!change) {\n    return { status: 'failed', reason: 'action' };\n  } else if (!name) {\n    return { status: 'failed', reason: 'name' };\n  } else if (!amount) {\n    return { status: 'failed', reason: 'amount' };\n  } else {\n    return { status: 'passed', name, change, amount };\n  }\n};\n\n// just for testing :)\n// console.log(inspectText('jeff owes me $200'));\n// console.log(inspectText('jeff paid me $200'));\n\nconst arrOfObj = {\n  jeff: { owed: 200, history: 'things' },\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nconst Person = inject('OwedStore')(\n  observer(props => {\n    return (\n      <div className=\"person\">\n        <span className=\"name\">{props.person.name}</span>\n        <span className=\"amount\">${props.person.amount}</span>\n        <div className=\"history\">\n          {props.person.history.map(record =>\n            record.change === 'increment' ? (\n              <span className=\"inc\">${record.amount}</span>\n            ) : (\n              <span className=\"dec\">${record.amount}</span>\n            )\n          )}\n        </div>\n      </div>\n    );\n  })\n);\n\nexport default Person;\n","import React, { useState } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { inspectText } from './function';\nimport './App.scss';\nimport Person from './Person';\n\nconst App = inject('OwedStore')(\n  observer(props => {\n    const [input, changeInput] = useState('');\n    const { OwedStore } = props;\n    const records = OwedStore.records;\n    console.log(records);\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      const inspectedText = inspectText(input);\n      if (inspectedText.status === 'failed') {\n        alert('a(n) ' + inspectedText.reason + ' appears to be missing.');\n      } else {\n        OwedStore.addRecord(inspectedText);\n        changeInput('');\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <form onSubmit={e => handleSubmit(e)}>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            value={input}\n            onChange={e => changeInput(e.target.value)}\n          />\n        </form>\n        <div className=\"people\">\n          {OwedStore.records.map(person => (\n            <Person person={person} key={person.name} />\n          ))}\n        </div>\n      </div>\n    );\n  })\n);\n\nexport default App;\n","import { observable, action, decorate } from 'mobx';\n\nclass OwedStore {\n  records = [];\n\n  addRecord = record => {\n    const person = record;\n    const records = this.records;\n    delete record.status;\n\n    !records.find(record => record.name === person.name)\n      ? newPerson(person)\n      : updatePerson(person);\n\n    function newPerson(person) {\n      records.push({\n        name: person.name,\n        amount: updateAmount(record.amount, record.change, 0),\n        history: [record],\n      });\n    }\n\n    function updatePerson(person) {\n      const changePerson = records.find(record => record.name === person.name);\n      changePerson.history = [...changePerson.history, record];\n      changePerson.amount = updateAmount(\n        record.amount,\n        record.change,\n        changePerson.amount\n      );\n    }\n\n    function updateAmount(amount, change, oldAmount) {\n      if (change === 'increment') {\n        return amount + oldAmount;\n      } else {\n        return oldAmount - amount;\n      }\n    }\n  };\n}\n\ndecorate(OwedStore, {\n  records: observable,\n  addRecord: action,\n});\n\nconst store = new OwedStore();\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'mobx-react';\n\nimport OwedStore from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider OwedStore={OwedStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
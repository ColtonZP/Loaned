{"version":3,"sources":["store.tsx","inspectText.ts","components/Form.tsx","components/Person.tsx","components/People.tsx","App.tsx","index.tsx"],"names":["useStore","create","set","records","addPerson","name","amount","change","person","history","id","state","removePerson","filter","updatePerson","deleteValue","map","record","Number","incKeywords","decKeywords","filterWords","amountReg","Form","useState","value","updateValue","onSubmit","e","preventDefault","submittedText","input","trimmedInput","replace","trim","keyword","match","toLowerCase","status","reason","inspectText","alert","find","className","type","onChange","target","Person","useEffect","toFixed","onClick","People","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61faa435.chunk.js","sourcesContent":["import create from 'zustand';\n\nexport type History = {\n  amount: number;\n  change: string;\n  id: number;\n};\n\nexport type Record = {\n  name: string;\n  amount: number;\n  history: History[];\n};\n\nexport type UpdatePerson = (\n  name: string,\n  amount: number,\n  change: string,\n  deleteValue?: boolean,\n  id?: number,\n) => void;\n\nexport type AddPerson = (name: string, amount: number, change: string) => void;\n\nexport type RemovePerson = (name: string) => void;\n\nexport type Store = {\n  records: Record[];\n  addPerson: AddPerson;\n  updatePerson: UpdatePerson;\n  removePerson: RemovePerson;\n};\n\nexport const useStore = create<Store>(set => ({\n  records: [],\n\n  addPerson: (name, amount, change) => {\n    const submitAmount = change === 'inc' ? amount : -amount;\n    const person = {\n      name,\n      amount: submitAmount,\n      history: [{ amount, change, id: 1 }],\n    };\n\n    set(state => ({ records: [...state.records, person] }));\n  },\n\n  removePerson: (name: string) => {\n    set(state => ({\n      records: state.records.filter(person => person.name !== name),\n    }));\n  },\n\n  updatePerson: (name, amount, change, deleteValue, id) => {\n    set(state => ({\n      records: state.records.map(record => {\n        if (record.name === name) {\n          if (deleteValue) {\n            return {\n              ...record,\n              history: record.history.filter(record => record.id !== id),\n              amount:\n                change === 'inc'\n                  ? (Number(record.amount * 100) - Number(amount * 100)) / 100\n                  : (Number(record.amount * 100) + Number(amount * 100)) / 100,\n            };\n          } else {\n            return {\n              ...record,\n              history: [\n                {\n                  amount,\n                  change,\n                  id: record.history[0].id + 1,\n                },\n                ...record.history,\n              ],\n              amount:\n                change === 'inc'\n                  ? (Number(record.amount * 100) + Number(amount * 100)) / 100\n                  : (Number(record.amount * 100) - Number(amount * 100)) / 100,\n            };\n          }\n        }\n\n        return record;\n      }),\n    }));\n  },\n}));\n","const incKeywords = / owe | owes | owed | took | borrowed | incurred | need | needs | needed /;\nconst decKeywords = / paid | gave | provided | loaned | lent /;\nconst filterWords = / me | from | another | with | back /;\nconst amountReg = /(?:[0-9],*)+(?:\\.[0-9]{1,2})?|\\.[0-9]{1,2}/;\n\nexport const inspectText = (input: string) => {\n  let name, amount, change;\n\n  let trimmedInput: string = input.replace(filterWords, ' ').trim();\n\n  // pull keyword\n  change = (() => {\n    let keyword = trimmedInput.match(incKeywords);\n    if (keyword) {\n      trimmedInput = trimmedInput.replace(incKeywords, '');\n      return 'inc';\n    } else {\n      keyword = trimmedInput.match(decKeywords);\n      if (keyword) {\n        trimmedInput = trimmedInput.replace(decKeywords, '');\n        return 'dec';\n      }\n    }\n  })();\n\n  //pull amount\n  amount = Number((trimmedInput.match(amountReg) || [])[0].replace(/[,]/g, ''));\n  trimmedInput = trimmedInput.replace(amountReg, '').trim();\n\n  //pull name\n  if (trimmedInput[0].match(/[iI]/)) {\n    if (change === 'inc') {\n      change = 'dec';\n    } else if (change === 'dec') {\n      change = 'inc';\n    }\n    trimmedInput = trimmedInput.replace(/[iI]/, '');\n  }\n\n  name = trimmedInput.toLowerCase();\n\n  if (!change) {\n    return { status: 'failed', reason: 'verb (ex. owes, paid, took, gave)' };\n  } else if (!name) {\n    return { status: 'failed', reason: 'name' };\n  } else if (!amount) {\n    return { status: 'failed', reason: 'amount' };\n  } else {\n    return { status: 'passed', name, change, amount };\n  }\n};\n","import React, { useState } from 'react';\n\nimport { useStore } from '../store';\nimport { inspectText } from '../inspectText';\n\nexport const Form = () => {\n  const { records, addPerson, updatePerson } = useStore(state => ({\n    records: state.records,\n    addPerson: state.addPerson,\n    updatePerson: state.updatePerson,\n  }));\n\n  const [value, updateValue] = useState<string>('');\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const submittedText = inspectText(value);\n    if (submittedText.status === 'failed') {\n      alert('a(n) ' + submittedText.reason + ' appears to be missing.');\n    } else if (submittedText.name && submittedText.amount) {\n      records.find(\n        (record: { name: string }) => record.name === submittedText.name,\n      )\n        ? updatePerson(\n            submittedText.name,\n            submittedText.amount,\n            submittedText.change,\n          )\n        : addPerson(\n            submittedText.name,\n            submittedText.amount,\n            submittedText.change,\n          );\n    }\n    updateValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className=\"text-input\"\n        type=\"text\"\n        value={value}\n        onChange={e => updateValue(e.target.value)}\n      />\n      <div className=\"placeholder\"></div>\n    </form>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { useStore, History } from '../store';\n\ntype Props = {\n  value: {\n    name: string;\n    amount: number;\n    history: History[];\n  };\n};\n\nexport const Person = ({ value }: Props) => {\n  const { updatePerson, removePerson } = useStore(state => ({\n    updatePerson: state.updatePerson,\n    removePerson: state.removePerson,\n  }));\n  const { name, amount, history } = value;\n\n  useEffect(() => {\n    if (amount === 0) {\n      removePerson(name);\n    }\n  }, [amount, name, removePerson]);\n\n  return (\n    <li className=\"person\">\n      <span className=\"name\">{name}</span>\n      <span className=\"amount\">\n        {amount % 1 !== 0 ? amount.toFixed(2) : amount}\n      </span>\n      <ul className=\"records\">\n        <button className=\"removePerson\" onClick={() => removePerson(name)}>\n          Remove person\n        </button>\n        {history.map((record: History) => {\n          const { amount, change, id } = record;\n\n          return (\n            <li className=\"record\" key={id}>\n              <span className={change}>{`${\n                change === 'inc' ? `+` : `-`\n              }${amount.toFixed(2)}`}</span>\n              <button\n                onClick={() => updatePerson(name, amount, change, true, id)}\n              >\n                &#x2715;\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </li>\n  );\n};\n","import React from 'react';\n\nimport { useStore, Record } from '../store';\nimport { Person } from './Person';\n\nexport const People = () => {\n  const records: Record[] = useStore(state => state.records);\n\n  return (\n    <ul className=\"people\">\n      {records.map((person: Record) => (\n        <Person key={person.name} value={person} />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { Form } from './components/Form';\nimport { People } from './components/People';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Loaned</h1>\n        <Form />\n      </header>\n      <People />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}